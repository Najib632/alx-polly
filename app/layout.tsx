import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import LogoutButton from "@/components/auth/logout-button"; // Import the LogoutButton
import { createClient } from "@/lib/supabase/server"; // Import server client
import { cookies } from "next/headers"; // Import cookies
import Link from "next/link";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  // Make layout async
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const supabase = createClient(cookieStore);

  const {
    data: { user },
  } = await supabase.auth.getUser(); // Fetch user

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <header className="flex w-full px-4 py-2 bg-background border-b items-center justify-between">
          <p className="font-bold">Polly App</p> {/* Simple branding */}
          {user ? (
            <div className="flex items-center gap-4">
              <p className="text-sm text-muted-foreground">
                Hello, {user.email}
              </p>
              <LogoutButton />
            </div>
          ) : (
            // Optionally, show login/signup links if user is not logged in, though
            // the /polls route will redirect them automatically.
            <div className="flex items-center gap-2">
              <Link
                href="/login"
                className="text-sm font-medium hover:underline"
              >
                Login
              </Link>
              <Link
                href="/signup"
                className="text-sm font-medium hover:underline"
              >
                Sign Up
              </Link>
            </div>
          )}
        </header>
        {children}
      </body>
    </html>
  );
}
